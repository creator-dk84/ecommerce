apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ecommerce
    service: discounts
    tags.datadoghq.com/env: "ruby-shop"
  name: discounts
spec:
  replicas: 1
  selector:
    matchLabels:
      service: discounts
      app: ecommerce
  strategy: {}
  template:
    metadata:
      labels:
        service: discounts
        app: ecommerce
        tags.datadoghq.com/env: "ruby-shop"
        tags.datadoghq.com/service: "advertisements"
        tags.datadoghq.com/version: "2.3.1"
      annotations:
        ad.datadoghq.com/discounts.logs: '[{"source": "python","service": "discounts","tags": ["env:ruby-shop"]}]'
    spec:
      containers:
      - image: ddtraining/discounts-service:latest
        name: discounts
        command: ["ddtrace-run"]
        args: ["flask", "run", "--port=5001", "--host=0.0.0.0"]
        env:
          - name: FLASK_APP
            value: "discounts.py"
          - name: FLASK_DEBUG
            value: "1"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: pw
                name: db-password
          - name: POSTGRES_USER
            value: "user"
          - name: DD_TRACE_AGENT_URL
            value: 'unix:///var/run/datadog/apm.socket'
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: DD_PROFILING_ENABLED
            value: "true"
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
        volumeMounts:
        - name: apmsocketpath
          mountPath: /var/run/datadog/
        ports:
        - containerPort: 5001
        resources: {}
      volumes:
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: discounts
    app: ecommerce
  name: discounts
spec:
  ports:
  - port: 5001
    protocol: TCP
    targetPort: 5001
  selector:
    service: discounts
    app: ecommerce
  sessionAffinity: None
  type: ClusterIP
