apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: advertisements
    app: ecommerce
    tags.datadoghq.com/env: "ruby-shop"
    tags.datadoghq.com/service: "advertisements"
    tags.datadoghq.com/version: "2.0.16"
  name: advertisements
spec:
  replicas: 1
  selector:
    matchLabels:
      service: advertisements
      app: ecommerce
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: advertisements
        app: ecommerce
        tags.datadoghq.com/env: "ruby-shop"
        tags.datadoghq.com/service: "advertisements"
        tags.datadoghq.com/version: "2.0.16"
      annotations:
        ad.datadoghq.com/advertisements.logs: '[{"source": "python","service": "advertisements","tags": ["env:ruby-shop"]}]'
    spec:
      containers:
      - image: ddtraining/advertisements-service:latest
        name: advertisements 
        command: ["ddtrace-run"]
        args: ["flask", "run", "--port=5002", "--host=0.0.0.0"]
        env:
        - name: FLASK_APP
          value: "ads.py"
        - name: FLASK_DEBUG
          value: "1"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: pw
              name: db-password
        - name: POSTGRES_USER
          value: "user"
        - name: DD_TRACE_AGENT_URL
          value: 'unix:///var/run/datadog/apm.socket'
        - name: DD_ENV
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/env']
        - name: DD_SERVICE
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/service']
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['tags.datadoghq.com/version']
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_PROFILING_ENABLED
          value: "true"
        volumeMounts:
        - name: apmsocketpath
          mountPath: /var/run/datadog/
        ports:
        - containerPort: 5002
        resources: {}
      volumes:
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: advertisements
    app: ecommerce
  name: advertisements
spec:
  ports:
  - port: 5002
    protocol: TCP
    targetPort: 5002
  selector:
    service: advertisements
    app: ecommerce
status:
